# Generated by Django 5.2.5 on 2025-08-11 06:43

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Stop",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("city_name", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("order_index", models.IntegerField(default=0)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("timezone", models.CharField(blank=True, max_length=50)),
                ("notes", models.TextField(blank=True)),
                ("accommodation_name", models.CharField(blank=True, max_length=200)),
                ("accommodation_address", models.TextField(blank=True)),
                (
                    "accommodation_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Stop",
                "verbose_name_plural": "Stops",
                "db_table": "stops",
                "ordering": ["order_index", "start_date"],
            },
        ),
        migrations.CreateModel(
            name="ActivityCatalog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("sightseeing", "Sightseeing"),
                            ("food", "Food & Dining"),
                            ("adventure", "Adventure"),
                            ("culture", "Culture & Arts"),
                            ("nightlife", "Nightlife"),
                            ("shopping", "Shopping"),
                            ("nature", "Nature & Outdoors"),
                            ("transport", "Transportation"),
                            ("accommodation", "Accommodation"),
                            ("relaxation", "Relaxation & Spa"),
                            ("sports", "Sports & Recreation"),
                            ("business", "Business"),
                            ("education", "Educational"),
                            ("entertainment", "Entertainment"),
                            ("tours", "Tours & Experiences"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("city_name", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("location_name", models.CharField(blank=True, max_length=200)),
                ("address", models.TextField(blank=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "average_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cost_range_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cost_range_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=5)),
                (
                    "estimated_duration_minutes",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "difficulty_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("easy", "Easy"),
                            ("moderate", "Moderate"),
                            ("challenging", "Challenging"),
                            ("expert", "Expert"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("age_restriction", models.IntegerField(blank=True, null=True)),
                ("group_size_min", models.IntegerField(blank=True, null=True)),
                ("group_size_max", models.IntegerField(blank=True, null=True)),
                ("season_availability", models.JSONField(blank=True, default=list)),
                ("operating_hours", models.JSONField(blank=True, default=dict)),
                ("website_url", models.URLField(blank=True)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("booking_required", models.BooleanField(default=False)),
                ("advance_booking_days", models.IntegerField(blank=True, null=True)),
                ("cancellation_policy", models.TextField(blank=True)),
                (
                    "rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review_count", models.IntegerField(default=0)),
                ("popular_times", models.JSONField(blank=True, default=dict)),
                ("accessibility_features", models.JSONField(blank=True, default=list)),
                ("included_amenities", models.JSONField(blank=True, default=list)),
                ("what_to_bring", models.JSONField(blank=True, default=list)),
                ("safety_guidelines", models.JSONField(blank=True, default=list)),
                ("image_urls", models.JSONField(blank=True, default=list)),
                ("video_url", models.URLField(blank=True, null=True)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("is_verified", models.BooleanField(default=False)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Activity Catalog",
                "verbose_name_plural": "Activity Catalog",
                "db_table": "activity_catalog",
                "ordering": ["-rating", "-review_count", "name"],
                "indexes": [
                    models.Index(
                        fields=["city_name", "country"],
                        name="activity_ca_city_na_7514d9_idx",
                    ),
                    models.Index(
                        fields=["category"], name="activity_ca_categor_faa411_idx"
                    ),
                    models.Index(
                        fields=["rating"], name="activity_ca_rating_927d35_idx"
                    ),
                    models.Index(
                        fields=["is_verified"], name="activity_ca_is_veri_2e211b_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("country_code", models.CharField(max_length=3)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("timezone", models.CharField(blank=True, max_length=50)),
                ("population", models.IntegerField(blank=True, null=True)),
                ("currency", models.CharField(blank=True, max_length=5)),
                ("language", models.CharField(blank=True, max_length=50)),
                ("description", models.TextField(blank=True)),
                ("best_time_to_visit", models.TextField(blank=True)),
                (
                    "average_temperature",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("popular_attractions", models.JSONField(blank=True, default=list)),
                ("travel_tips", models.JSONField(blank=True, default=list)),
                (
                    "safety_rating",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "cost_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("budget", "Budget"),
                            ("moderate", "Moderate"),
                            ("expensive", "Expensive"),
                            ("luxury", "Luxury"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("image_url", models.URLField(blank=True, null=True)),
                ("weather_info", models.JSONField(blank=True, default=dict)),
                ("transport_options", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "City",
                "verbose_name_plural": "Cities",
                "db_table": "cities",
                "ordering": ["country", "name"],
                "unique_together": {("name", "country")},
            },
        ),
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("sightseeing", "Sightseeing"),
                            ("food", "Food & Dining"),
                            ("adventure", "Adventure"),
                            ("culture", "Culture & Arts"),
                            ("nightlife", "Nightlife"),
                            ("shopping", "Shopping"),
                            ("nature", "Nature & Outdoors"),
                            ("transport", "Transportation"),
                            ("accommodation", "Accommodation"),
                            ("relaxation", "Relaxation & Spa"),
                            ("sports", "Sports & Recreation"),
                            ("business", "Business"),
                            ("education", "Educational"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("location_name", models.CharField(blank=True, max_length=200)),
                ("address", models.TextField(blank=True)),
                ("start_time", models.TimeField(blank=True, null=True)),
                ("end_time", models.TimeField(blank=True, null=True)),
                ("duration_minutes", models.IntegerField(blank=True, null=True)),
                (
                    "cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=5)),
                ("is_paid", models.BooleanField(default=False)),
                (
                    "priority",
                    models.IntegerField(
                        choices=[
                            (1, "Low"),
                            (2, "Medium"),
                            (3, "High"),
                            (4, "Must Do"),
                        ],
                        default=2,
                    ),
                ),
                ("is_booked", models.BooleanField(default=False)),
                ("booking_reference", models.CharField(blank=True, max_length=100)),
                ("website_url", models.URLField(blank=True)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("image_url", models.URLField(blank=True, null=True)),
                ("weather_dependent", models.BooleanField(default=False)),
                ("indoor_activity", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "stop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="trips.stop",
                    ),
                ),
            ],
            options={
                "verbose_name": "Activity",
                "verbose_name_plural": "Activities",
                "db_table": "activities",
                "ordering": ["start_time", "priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("cover_image", models.URLField(blank=True, null=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planning", "Planning"),
                            ("upcoming", "Upcoming"),
                            ("ongoing", "Ongoing"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="planning",
                        max_length=20,
                    ),
                ),
                (
                    "estimated_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "actual_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=5)),
                ("collaborators_can_edit", models.BooleanField(default=False)),
                ("auto_calculate_budget", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Trip",
                "verbose_name_plural": "Trips",
                "db_table": "trips",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="stop",
            name="trip",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stops",
                to="trips.trip",
            ),
        ),
        migrations.CreateModel(
            name="SharedItinerary",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("public_slug", models.CharField(max_length=255, unique=True)),
                ("allow_comments", models.BooleanField(default=True)),
                ("allow_copying", models.BooleanField(default=True)),
                ("password_protected", models.BooleanField(default=False)),
                ("access_password", models.CharField(blank=True, max_length=100)),
                ("view_count", models.IntegerField(default=0)),
                ("copy_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "trip",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shared_itinerary",
                        to="trips.trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shared Itinerary",
                "verbose_name_plural": "Shared Itineraries",
                "db_table": "shared_itineraries",
            },
        ),
        migrations.CreateModel(
            name="Budget",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transport_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "stay_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "activity_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "meal_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "shopping_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "miscellaneous_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "transport_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "stay_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "activity_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "meal_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "shopping_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "miscellaneous_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=5)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "trip",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="budget",
                        to="trips.trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "Budget",
                "verbose_name_plural": "Budgets",
                "db_table": "budgets",
            },
        ),
        migrations.CreateModel(
            name="TripTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("category", models.CharField(blank=True, max_length=50)),
                ("template_data", models.JSONField(default=dict)),
                ("duration_days", models.IntegerField()),
                (
                    "estimated_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("moderate", "Moderate"),
                            ("challenging", "Challenging"),
                            ("expert", "Expert"),
                        ],
                        default="moderate",
                        max_length=20,
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("use_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Trip Template",
                "verbose_name_plural": "Trip Templates",
                "db_table": "trip_templates",
                "ordering": ["-use_count", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TripCollaborator",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "permission_level",
                    models.CharField(
                        choices=[
                            ("view", "View Only"),
                            ("comment", "View & Comment"),
                            ("edit", "View & Edit"),
                            ("admin", "Full Access"),
                        ],
                        default="view",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("declined", "Declined"),
                            ("revoked", "Revoked"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("invited_at", models.DateTimeField(auto_now_add=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "invited_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaborators",
                        to="trips.trip",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaborated_trips",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Trip Collaborator",
                "verbose_name_plural": "Trip Collaborators",
                "db_table": "trip_collaborators",
                "unique_together": {("trip", "user")},
            },
        ),
    ]
